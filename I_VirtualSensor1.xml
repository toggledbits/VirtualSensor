<?xml version="1.0" encoding="UTF-8"?>
<implementation>
    <!-- files>L_LuaXP.lua</files -->
    <functions>
        -- -------------------------------------------------------------------------------------------------------------------------
        -- VirtualSensor
        -- https://github.com/toggledbits/VirtualSensor
        -- Patrick Rigney, patrick@toggledbits.com
        -- -------------------------------------------------------------------------------------------------------------------------
        function startupVirtualSensor(dev)
            luup.log("VirtualSensor Plugin START-UP!")
            VirtualSensor = require("L_VirtualSensor1")
            virtualSensorTick = VirtualSensor.plugin_tick
            virtualSensorWatchCallback = VirtualSensor.plugin_watchCallback
            virtualSensorRequestHandler = VirtualSensor.requestHandler
            luup.register_handler("virtualSensorRequestHandler", "VirtualSensor")
            return VirtualSensor.plugin_init(dev)
        end
    </functions>
    <startup>startupVirtualSensor</startup>
    <actionList>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:VirtualSensor1</serviceId>
            <name>GetInterval</name>
            <run>
                return -- what we do here doesn't matter, luup uses the relatedStateVariable directly
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:VirtualSensor1</serviceId>
            <name>SetInterval</name>
            <run>
                local newInterval = lul_settings.newTargetValue
                if newInterval ~= nil then newInterval = tonumber(newInterval, 10) end
                if newInterval ~= nil and newInterval > 0 then
                    luup.variable_set("urn:toggledbits-com:serviceId:VirtualSensor1", "Interval", newInterval, lul_device)
                    return true
                end
                return false
            </run>
        </action>
        <action>
            <serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
            <name>SetArmed</name>
            <run>
                VirtualSensor.actionSetArmed(lul_device, lul_settings.newArmedValue)
                return true
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:VirtualSensor1</serviceId>
            <name>Trip</name>
            <run>
                VirtualSensor.actionTrip( lul_device )
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:VirtualSensor1</serviceId>
            <name>Reset</name>
            <run>
                VirtualSensor.actionReset( lul_device )
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:VirtualSensor1</serviceId>
            <name>SetEnabled</name>
            <run>
                luup.variable_set( "urn:toggledbits-com:serviceId:VirtualSensor1", "Enabled",
                    lul_settings.newEnabledValue, lul_device )
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:VirtualSensor1</serviceId>
            <name>SetValue</name>
            <run>
                VirtualSensor.actionSetValue( lul_device, lul_settings.newValue )
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:VirtualSensor1</serviceId>
            <name>ResetBattery</name>
            <run>
                VirtualSensor.actionResetBattery( lul_device )
            </run>
        </action>
        <action>
            <serviceId>urn:toggledbits-com:serviceId:VirtualSensor1</serviceId>
            <name>SetDebug</name>
            <run>
                VirtualSensor.actionSetDebug( lul_device, lul_settings.debug )
            </run>
        </action>
    </actionList>
</implementation>
